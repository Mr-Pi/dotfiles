# vim: ft=zsh
export ZSH=$HOME/.oh-my-zsh

source /etc/environment
[ $DISPLAY ] && export TERM="xterm-256color"
[ $TMUX ] && [ $TERM = "screen" ] && export TERM="xterm-screen-256color"
[ $TMUX ] && [ $DISPLAY ] && export TERM="xterm-screen-256color"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
HIST_STAMPS="yyyy-mm-dd"

source ~/.envConf

# Would you like to use another custom folder than $ZSH/custom?
[ -z "$ZSH_CUSTOM" ] && echo -e "\e[1;31mMake sure, you installed »https://github.com/Mr-Pi/dotfiles« correctly!\e[0m"
#ZSH_CUSTOM=''

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
plugins=(git adb urltools mercurial colored-man-pages colorize nmap rebar rsync pass)

################################################################################
# escape from tmux
################################################################################
if [ ! $TMUX ] && [ $DISPLAY ]; then
	tmux
	echo -ne "\e[1mexit term\e[0m [Y|n]?"
	read -t1 -q
	res=$?
	if [ $res -eq 2 ] || [ $res -eq 0 ]; then
		exit
	fi
fi

source $ZSH/oh-my-zsh.sh

################################################################################
# environment
################################################################################
export NAME="Mr. Pi"
export EMAIL="mrpi@mr-pi.de"
export PYTHONPATH="$HOME/.easy_install:/home/mrpi/.easy_install/lib/python2.7/site-packages:/home/mrpi/.easy_install/lib/python3.4/site-packages"
export PATH="$PATH:/sbin/:/usr/sbin/" #super user utils
export PATH="$PATH:/mnt/data/esp-open-sdk/xtensa-lx106-elf/bin/" #special cross compiler
export PATH="$PATH:$HOME/.local/bin/" #misc user binary
export PATH="$PATH:$HOME/.easy_install/bin/" #python easy install binary
export PATH="$PATH:$HOME/.npm/bin/" #npm binary
export PATH="$PATH:$HOME/.go/bin/" #go binary
export PATH="$PATH:$HOME/.dotfiles/scripts/" #dotfile scripts
export LS_COLORS="di=0;35"

################################################################################
# useful aliases
################################################################################
alias ss="sudo su"
alias readnote="echo -e \`cat ~/notiz.txt | grep -v '^#.*$'\`"
alias newnote='read varNewNote; echo "\\\n\\\e[33m`date +%F`\\\e[1m:\\\e[0m $varNewNote" >> ~/notiz.txt'
alias cdtmp='cd `mktemp -d`'
alias mktmp='cdtmp'
alias light='~/hg/my_lua_projects_esp8266/light.sh'
alias call="~/hg/remotecall/call.sh"
alias callhandy="~/hg/remotecall/callhandy.sh"
alias mail="i3-msg 'workspace mail'"
alias trans='compton-trans'
alias mv='mv -vi'
alias cp='cp -vi'
alias rm='rm -vI'
alias mkdir='mkdir -v'
alias ssh='TERM="screen-256color" ssh'
alias HR='printf "\e[1m%*s\e[0m\n" "${COLUMNS:-$(tput cols)}" "" | tr " " -'

alias gp='git push'
alias gpo='branch="`git rev-parse --abbrev-ref HEAD`"; git push --set-upstream origin "$branch"'
alias gf='branch="`git rev-parse --abbrev-ref HEAD`"; git fetch && git diff "$branch" "origin/$branch" && git merge'
alias gr='branch="`git rev-parse --abbrev-ref HEAD`"; git fetch && git diff "$branch" "origin/$branch" && git rebase'
alias gc='git commit'
alias ga='git add'
alias gb='git checkout'
alias gbc='git checkout -b'
alias gbd='git branch -d'
alias gcs='git status'

################################################################################
# go
################################################################################
eval `go env`
export GOPATH="$HOME/.go/"

################################################################################
# ssh
################################################################################
if [[ -n $SSH_CONNECTION ]]; then
	echo "remote session"
else
	echo "local session"
fi

if [ -f ~/.agent.env ]; then
	. ~/.agent.env > /dev/null
	if [ ! -S "$SSH_AUTH_SOCK" ]; then
		echo "Stale agent file found. Spawning new agent… "
		eval `ssh-agent | tee ~/.agent.env`
	fi
else
	echo "Starting ssh-agent"
	eval `ssh-agent | tee ~/.agent.env`
fi

################################################################################
# data sharing
################################################################################
function publish {
	[ $# -lt 1 ] && return 1
	local HASH=`pwgen 32 1`
	mkdir /mnt/share/priv/${HASH}
	for file in $@; do
		cp -rv "${file}" /mnt/share/priv/${HASH}/
	done
	echo -n "»https://dl.1f6.de/share/priv/${HASH}/"
	[ $# -eq 1 ] && echo "$1«" || echo "«" 
}

################################################################################
# pushover
################################################################################
function pushmsg {
	[ -n "$PUSHOVER_API_URL" -a -n "$PUSHOVER_API_USER" -a -n "$PUSHOVER_API_TOKEN" ] &&
	curl -s \
		-F "user=${PUSHOVER_API_USER}" \
		-F "token=${PUSHOVER_API_TOKEN}" \
		-F "title=Notification: '`hostname`'" \
		-F "message=$*" \
		"${PUSHOVER_API_URL}" ||
	echo -e "\e[1;31mPlease make sure that (\e[0;31mPUSHOVER_API_USER\e[1;31m,\e[0;31m PUSHOVER_API_TOKEN \e[1;31mand\e[0;31m PUSHOVER_API_URL\e[1;31m) are set correctly!\e[0m"
	echo ""
}

################################################################################
# git
################################################################################
function gi {
	local tmpfile=`mktemp`
	curl -L -s "https://www.gitignore.io/api/$@" >$tmpfile
	if grep -q '^# Created by' $tmpfile; then
		=cp -fv $tmpfile .gitignore
		cat .gitignore
	else
		cat $tmpfile
	fi
	=rm $tmpfile
}

###-tns-completion-start-###
if [ -f /home/mrpi/.tnsrc ]; then 
    source /home/mrpi/.tnsrc 
fi
###-tns-completion-end-###
